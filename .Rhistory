get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
rownames(no_out) <- c(1:nrow(no_out))
train_index <- sample(1:nrow(no_out), 0.9 * nrow(no_out))
test_index <- setdiff(1:nrow(no_out), train_index)
# Build X_train, y_train, X_test, y_test
X_train <- no_out[train_index, -11]
y_train <- no_out[train_index, "bmi"]
X_test <- no_out[test_index, -11]
y_test <- no_out[test_index, "bmi"]
```
```{r}
get_r2 <- function(test.y, test.pred){
SS.total      <- sum((test.y - mean(test.y))^2)
SS.residual   <- sum((test.y - test.pred)^2)
SS.regression <- sum((test.pred - mean(test.y))^2)
SS.total <- (SS.regression+SS.residual)
r2 <- SS.regression/SS.total
return(r2)
}
```
Modello 1: PCA taxa + variabili demografiche + clustering
```{r}
mod_lin1 <- lm(y_train ~  PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f + cluster, X_train)
summary(mod_lin1)
anova(mod_lin1)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
rownames(no_out) <- c(1:nrow(no_out))
train_index <- sample(1:nrow(no_out), 0.9 * nrow(no_out))
test_index <- setdiff(1:nrow(no_out), train_index)
# Build X_train, y_train, X_test, y_test
X_train <- no_out[train_index, -11]
y_train <- no_out[train_index, "bmi"]
X_test <- no_out[test_index, -11]
y_test <- no_out[test_index, "bmi"]
```
```{r}
get_r2 <- function(test.y, test.pred){
SS.total      <- sum((test.y - mean(test.y))^2)
SS.residual   <- sum((test.y - test.pred)^2)
SS.regression <- sum((test.pred - mean(test.y))^2)
SS.total <- (SS.regression+SS.residual)
r2 <- SS.regression/SS.total
return(r2)
}
```
Modello 1: PCA taxa + variabili demografiche + clustering
```{r}
mod_lin1 <- lm(y_train ~  PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f + cluster, X_train)
summary(mod_lin1)
anova(mod_lin1)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model1 <- train(y_train ~ PC1_taxa + PC2_taxa + PC3_taxa + PC4_taxa + PC5_taxa + PC6_taxa + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
get_confid_i <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$RMSE)
colnames(ci_mod1)[1] <- "RMSE"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$RMSE)
st_dev <- sd(ci_mod1$RMSE)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "RMSE"
return(get_df)
}
get_confid_i_rsquared <- function(model1, model_type = "Mod1"){
ci_mod1 <- as.data.frame(model1$resample$Rsquared)
colnames(ci_mod1)[1] <- "R_squared"
#ci_mod1$type <- "Model 1"
media <- mean(ci_mod1$R_squared)
st_dev <- sd(ci_mod1$R_squared)
stand_error <- (1/sqrt(10))*st_dev
lower_bound <- media - 1.96*stand_error
upper_bound <- media + 1.96*stand_error
get_df <- as.data.frame(cbind(media, lower_bound, upper_bound))
get_df$type <- model_type
get_df$metric <- "R_squared"
return(get_df)
}
info_mod1 <- get_confid_i(model1)
info_mod1_r2 <- get_confid_i_rsquared(model1,model_type = "Mod1")
#info_mod1_r2 <- get_r2(predict(model1,X_test), y_test)
info_modello1 <- rbind(info_mod1, info_mod1_r2)
Metrics::rmse(predict(model1,X_test), y_test)
final_info
```
Modello 2: PCA nutrienti + variabili demografiche + clustering:
```{r}
mod_lin2 <- lm(y_train ~  PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f + cluster, X_train)
summary(mod_lin2)
anova(mod_lin2)
#CV:
train_data <- cbind(y_train, X_train)
train.control <- trainControl(method = "cv", number = 10,savePred=T)
model2 <- train(y_train ~ PC1_nut + PC2_nut + PC3_nut + PC4_nut + PC5_nut + age + sex1m2f, train_data,
method = "lm", trControl = train.control)
model2$resample
Metrics::rmse(predict(model2,X_test), y_test)
get_r2(predict(model2,X_test), y_test)
info_mod2 <- get_confid_i(model2, model_type = "Mod2")
info_mod2_r2 <- get_confid_i_rsquared(model2, model_type = "Mod2")
info_modello2 <- rbind(info_mod2, info_mod2_r2)
info_totali <- rbind(info_modello1, info_modello2)
info_totali
